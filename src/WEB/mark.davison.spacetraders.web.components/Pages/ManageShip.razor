@attribute [Route(Routes.Ship)]
@inherits FluxorComponent

<MudStack Class="pa-4">
    <MudStack Row AlignItems="AlignItems.End">
        <MudText Typo="Typo.h3">@($"Ship {ShipSymbol}")</MudText>
        @if (ShipState.Value.GetShipCooldown(ShipSymbol) is {} cooldown && cooldown.RemainingSeconds > 0)
        {
            <MudText class="ms-4" Typo="Typo.subtitle1">@($"On cooldown until {cooldown.Expiration.Humanize()}")</MudText>
        }
        <MudSpacer />
        <MudIconButton Icon="@Icons.Material.Filled.Refresh"
                       Color="Color.Inherit"
                       OnClick="@Refresh" />
    </MudStack>

    @if (ShipState.Value.GetShip(ShipSymbol) is { } ship && 
         ShipState.Value.GetShipNav(ShipSymbol) is { } shipNav &&
         ShipState.Value.GetShipFuel(ShipSymbol) is {} shipFuel &&
         WaypointState.Value.GetWaypoint(shipNav.WaypointSymbol) is { } waypoint)
    {
        <MudText Typo="Typo.h6">@($"Role: {ship.Role}")</MudText>
        <MudText Typo="Typo.h6">@($"System: {shipNav.SystemSymbol}")</MudText>
        <MudText Typo="Typo.h6">@($"Waypoint: {shipNav.WaypointSymbol}")</MudText>
        <MudText Typo="Typo.h6">@($"Status: {shipNav.Status}")</MudText>
        <MudText Typo="Typo.h6">@($"Flight: {shipNav.FlightMode}")</MudText>
        <MudText Typo="Typo.h6">@($"Fuel: {shipFuel.Current}/{shipFuel.Capacity}")</MudText>
                
        <MudExpansionPanels>
            @if (ShipState.Value.GetShip(ShipSymbol) is {} ship && 
                 ShipState.Value.GetShipNav(ShipSymbol) is { } nav && 
                 ShipState.Value.GetShipNavRoute(ShipSymbol) is { } route)
            {
                <MudExpansionPanel Text="Navigation" Class="pa-4">
                    <ShipNavigation Identifier="@Identifier" 
                                    Ship="@ship" 
                                    ShipNav="@nav" 
                                    ShipNavRoute="@route"
                                    CurrentWaypoint="@waypoint" />
                </MudExpansionPanel>
            }
            @*TODO: component wid nav/cargo properties???*@
            @if (ShipState.Value.GetShipNav(ShipSymbol) is { } snav && 
                 snav.Status != "IN_TRANSIT")
            {
                <MudExpansionPanel Text="Actions" Class="pa-4">
                    <MudStack Row>
                        @if (snav.Status == "IN_ORBIT")
                        {
                            <MudButton ButtonType="ButtonType.Submit"
                                       Color="Color.Primary"
                                       StartIcon="@Icons.Material.Filled.Landslide"
                                       Variant="Variant.Filled"
                                       Size="Size.Large"
                                       Disabled="@(_inProgress)"
                                       IconSize="Size.Large"
                                       OnClick="@ExtractResources">Extract</MudButton>
                        }
                        @if (waypoint.Traits.Contains("Marketplace"))
                        {
                            <MudButton ButtonType="ButtonType.Submit"
                                       Color="Color.Primary"
                                       StartIcon="@Icons.Material.Filled.BatteryFull"
                                       Variant="Variant.Filled"
                                       Size="Size.Large"
                                       Disabled="@(_inProgress || snav.Status != "DOCKED" || shipFuel.Capacity == shipFuel.Current)"
                                       IconSize="Size.Large"
                                       OnClick="@Refuel">Refuel</MudButton>
                        }
                    </MudStack>
                    @*To refuel - have to be docked*@
                    @*To sell - have to be docked*@
                </MudExpansionPanel>
            }
            @if (ShipState.Value.GetShipCargo(ShipSymbol) is { } cargo)
            {
                <MudExpansionPanel Text="Cargo" Class="pa-4">
                    <MudText>@($"Capacity: {cargo.Capacity}")</MudText>
                    <MudText>@($"Used: {cargo.Units}")</MudText>

                    <MudTable Items="@cargo.Inventory">
                        <HeaderContent>
                            <MudTh>Name</MudTh>
                            <MudTh>Amount</MudTh>
                            <MudTh></MudTh>
                        </HeaderContent>
                        <RowTemplate>
                            <MudTd DataLabel="Name">
                                <MudText Typo="Typo.body1">@context.Name</MudText>
                            </MudTd>
                            <MudTd DataLabel="HeaderContent">
                                <MudText Typo="Typo.body1">@context.Units</MudText>
                            </MudTd>
                            <MudTd>
                                <CommandMenu OnCommandMenuItemSelected="@(_ => CargoCommandMenuItemSelected(_, context))"
                                             Items="@CargoCommandMenuItems(context)" />
                            </MudTd>
                        </RowTemplate>
                    </MudTable>
                </MudExpansionPanel>
            }
        </MudExpansionPanels>

    }
    else
    {
        <MudProgressCircular Indeterminate
                             Class="ma-auto"
                             Size="Size.Large" />
    }

</MudStack>