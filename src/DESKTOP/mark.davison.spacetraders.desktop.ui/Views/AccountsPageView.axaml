<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="using:mark.davison.spacetraders.desktop.ui.ViewModels"			 
			 xmlns:materialIcons="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
			 xmlns:mdcm="clr-namespace:mark.davison.common.client.desktop.components.Models;assembly=mark.davison.common.client.desktop"
			 xmlns:c="using:mark.davison.spacetraders.desktop.ui.Converters"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="mark.davison.spacetraders.desktop.ui.AccountsPageView"
			 x:DataType="vm:AccountsPageViewModel">
	<StackPanel Orientation="Vertical" Margin="20" Name="Panel">
		<StackPanel Orientation="Horizontal" Spacing="16">
			<TextBlock Text="Accounts" FontSize="32" />
			<SplitButton Content="Register" Command="{Binding RegisterNewAgentCommand}">
				<SplitButton.Flyout>
					<MenuFlyout Placement="Bottom">
						<MenuItem Header="Existing" />
					</MenuFlyout>
				</SplitButton.Flyout>
			</SplitButton>
		</StackPanel>
		<DataGrid ItemsSource="{Binding Accounts}"
				  IsReadOnly="True"
				  GridLinesVisibility="Horizontal"
				  BorderThickness="1"
				  SelectedItem="{Binding SelectedItem}"
				  Name="AccountGrid">
			<DataGrid.Styles>
				<!--Disables cell selection-->
				<Style Selector="DataGridCell:current /template/ Grid#FocusVisual">
					<Setter Property="IsVisible" Value="false" />
				</Style>
			</DataGrid.Styles>
			<DataGrid.Columns>
				<DataGridTextColumn Header="Identifier"  Binding="{Binding Identifier}"/>
				<DataGridTextColumn Header="Version" Binding="{Binding Version}" />
				<DataGridTextColumn Header="Email" Binding="{Binding Email}" />
				<DataGridTemplateColumn>
					<DataTemplate>
						<Button Width="32" Height="32" CornerRadius="16">
							<Button.Content>
								<materialIcons:MaterialIcon Kind="MoreVert" />
							</Button.Content>
							<Button.Flyout>
								<MenuFlyout ItemsSource="{Binding #Panel.((vm:AccountsPageViewModel)DataContext).FlyoutMenuItems}">
									<MenuFlyout.ItemTemplate>
										<DataTemplate x:DataType="mdcm:FlyoutMenuItem">
											<MenuItem Name="menuitem" 
													  Header="{Binding Name}"
													  Command="{Binding #Panel.((vm:AccountsPageViewModel)DataContext).CommandMenuCommand}"
													  CommandParameter="{Binding Value}">
											</MenuItem>
										</DataTemplate>
									</MenuFlyout.ItemTemplate>
								</MenuFlyout>
							</Button.Flyout>
						</Button>
					</DataTemplate>
				</DataGridTemplateColumn>
			</DataGrid.Columns>
		</DataGrid>
		<ProgressBar IsVisible="{Binding Loading}" IsIndeterminate="true" Width="{Binding #AccountGrid.Width}" MaxWidth="{Binding #AccountGrid.MaxWidth}" />
		<Border IsVisible="{Binding ServerStatus, Converter={x:Static ObjectConverters.IsNotNull}}"
				BorderThickness="1" 
				BorderBrush="DarkGray"
				HorizontalAlignment="Left"
				Margin="0 8 8 8">
			<Grid>
				<Grid.Styles>
					<Style Selector="TextBlock">
						<Setter Property="Margin" Value="8" />
					</Style>
				</Grid.Styles>
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
				</Grid.RowDefinitions>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>
				<TextBlock Grid.Column="0" Grid.Row="0" Text="Status" />
				<TextBlock Grid.Column="1" Grid.Row="0" Text="{Binding ServerStatus.Status}" />
				<TextBlock Grid.Column="0" Grid.Row="1" Text="Version" />
				<TextBlock Grid.Column="1" Grid.Row="1" Text="{Binding ServerStatus.Version}" />
				<TextBlock Grid.Column="0" Grid.Row="2" Text="Reset On" />
				<TextBlock Grid.Column="1" Grid.Row="2" Text="{Binding ServerResetDate}" />
				<TextBlock Grid.Column="0" Grid.Row="3" Text="Reset Frequency" />
				<TextBlock Grid.Column="1" Grid.Row="3" Text="{Binding ServerStatus.ResetFrequency, Converter={c:ServerResetFrequencyConverter}}" />
				<TextBlock Grid.Column="0" Grid.Row="4" Text="Next Reset" />
				<TextBlock Grid.Column="1" Grid.Row="4" Text="{Binding ServerNextReset}" />
			</Grid>
		</Border>
	</StackPanel>
	
</UserControl>
